#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(dead_code)]

/* automatically generated by rust-bindgen 0.58.1 */
pub type sauchar_t = u8;
pub type saint_t = i32;
pub type saidx64_t = i64;

#[link(name = "divsufsort64", kind = "static")]
extern "C" {
    pub fn divsufsort64(T: *const sauchar_t, SA: *mut saidx64_t, n: saidx64_t) -> saint_t;

    pub fn divbwt64(
        T: *const sauchar_t,
        U: *mut sauchar_t,
        A: *mut saidx64_t,
        n: saidx64_t,
    ) -> saidx64_t;

    pub fn divsufsort64_version() -> *const ::std::os::raw::c_char;

    pub fn bw_transform64(
        T: *const sauchar_t,
        U: *mut sauchar_t,
        SA: *mut saidx64_t,
        n: saidx64_t,
        idx: *mut saidx64_t,
    ) -> saint_t;

    pub fn inverse_bw_transform64(
        T: *const sauchar_t,
        U: *mut sauchar_t,
        A: *mut saidx64_t,
        n: saidx64_t,
        idx: saidx64_t,
    ) -> saint_t;

    pub fn sufcheck64(
        T: *const sauchar_t,
        SA: *const saidx64_t,
        n: saidx64_t,
        verbose: saint_t,
    ) -> saint_t;

    pub fn sa_search64(
        T: *const sauchar_t,
        Tsize: saidx64_t,
        P: *const sauchar_t,
        Psize: saidx64_t,
        SA: *const saidx64_t,
        SAsize: saidx64_t,
        left: *mut saidx64_t,
    ) -> saidx64_t;

    pub fn sa_simplesearch64(
        T: *const sauchar_t,
        Tsize: saidx64_t,
        SA: *const saidx64_t,
        SAsize: saidx64_t,
        c: saint_t,
        left: *mut saidx64_t,
    ) -> saidx64_t;
}